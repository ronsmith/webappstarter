-- noinspection SqlIdentifierForFile

DROP TABLE IF EXISTS app_user_role_xref;
DROP TABLE IF EXISTS protected_element_role_xref;
DROP TABLE IF EXISTS session;
DROP TABLE IF EXISTS app_user;
DROP TABLE IF EXISTS app_role;
DROP TABLE IF EXISTS protected_element;
DROP TABLE IF EXISTS person;
DROP TABLE IF EXISTS reference_data;

CREATE TABLE IF NOT EXISTS person (
    id          INTEGER         PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    firstName   VARCHAR(100)    NOT NULL,
    lastName    VARCHAR(100)    NOT NULL,
    active      BOOLEAN         NOT NULL
);

CREATE TABLE IF NOT EXISTS app_user (
    id          INTEGER         PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    username    VARCHAR(100)    NOT NULL,
    password    VARCHAR(100)    DEFAULT NULL,
    personId    INTEGER         DEFAULT NULL REFERENCES Person (id),
    active      BOOLEAN         NOT NULL
);

CREATE UNIQUE INDEX "UserUseridIdx" ON app_user (username);

CREATE TABLE IF NOT EXISTS session (
    id          UUID            PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id     INTEGER         DEFAULT NULL REFERENCES app_user (id),
    key_vals    JSONB           NOT NULL DEFAULT '{}'::jsonb,
    expires     TIMESTAMP       NOT NULL
);

-- CREATE INDEX "SessionUseridIdx" ON session (user_id);

CREATE TABLE IF NOT EXISTS protected_element (
    id          INTEGER         PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    element     VARCHAR(200)    NOT NULL
);

CREATE UNIQUE INDEX "ProtectedElementIdx" ON protected_element (element);

CREATE TABLE IF NOT EXISTS app_role (
    id          INTEGER         PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    role        VARCHAR(100)    NOT NULL,
    label       VARCHAR(255)    NOT NULL,
    description VARCHAR(1024)   DEFAULT NULL,
    active      BOOLEAN         NOT NULL
);

CREATE UNIQUE INDEX "AppRoleIdx" ON app_role (role);

CREATE TABLE IF NOT EXISTS app_user_role_xref (
    user_id     INTEGER         NOT NULL REFERENCES app_user (id) ON DELETE CASCADE,
    role_id     INTEGER         NOT NULL REFERENCES app_role (id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE IF NOT EXISTS protected_element_role_xref (
    element_id  INTEGER         NOT NULL REFERENCES protected_element (id) ON DELETE CASCADE,
    role_id     INTEGER         NOT NULL REFERENCES app_role (id) ON DELETE CASCADE,
    PRIMARY KEY (element_id, role_id)
);
